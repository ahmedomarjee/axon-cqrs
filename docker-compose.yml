version: "3.4"
services:
  mongodb:
    image: mongo
    networks:
    - cqrs_network

  axonserver:
    image: axoniq/axonserver
    ports:
    - "8024:8024"
    networks:
    - cqrs_network

  ngrok1:
    image: wernight/ngrok
    ports:
    - "5040:4040"
    networks:
    - cqrs_network
    environment:
    - NGROK_PROTOCOL=http
    - NGROK_PORT=commands:8080
    - NGROK_DEBUG=false

  ngrok2:
    image: wernight/ngrok
    ports:
    - "5041:4040"
    networks:
    - cqrs_network
    environment:
    - NGROK_PROTOCOL=http
    - NGROK_PORT=projection-mongo:8082
    - NGROK_DEBUG=false

  commands:
    build:
      context: commands
      dockerfile: src/main/docker/Dockerfile
      args:
        JAR_FILE: target/app.jar
        SCRIPT_DIR: src/main/docker
    ports:
    - "8080:8080"
    environment:
    - WAIT_FOR_IT=mongodb:27017 ngrok1:4040 axonserver:8024
    - JAVA_OPTS=-Xmx256m -Xms128m -Dspring.profiles.active=docker-compose
    networks:
    - cqrs_network


  projection-mongo:
    build:
      context: projection-mongo
      dockerfile: src/main/docker/Dockerfile
      args:
        JAR_FILE: target/app.jar
        SCRIPT_DIR: src/main/docker
    ports:
    - "8081:8080"
    environment:
    - WAIT_FOR_IT=mongodb:27017 ngrok2:4040 axonserver:8024
    - JAVA_OPTS=-Xmx256m -Xms128m -Dspring.profiles.active=docker-compose
    networks:
    - cqrs_network

networks:
  cqrs_network: